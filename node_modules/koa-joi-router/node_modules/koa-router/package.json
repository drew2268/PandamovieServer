{
  "_args": [
    [
      {
        "raw": "koa-router@git+https://github.com/aheckmann/koa-router.git#19e60d9",
        "scope": null,
        "escapedName": "koa-router",
        "name": "koa-router",
        "rawSpec": "git+https://github.com/aheckmann/koa-router.git#19e60d9",
        "spec": "git+https://github.com/aheckmann/koa-router.git#19e60d9",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:aheckmann/koa-router.git#19e60d9",
          "sshUrl": "git+ssh://git@github.com/aheckmann/koa-router.git#19e60d9",
          "httpsUrl": "git+https://github.com/aheckmann/koa-router.git#19e60d9",
          "gitUrl": "git://github.com/aheckmann/koa-router.git#19e60d9",
          "shortcut": "github:aheckmann/koa-router#19e60d9",
          "directUrl": "https://raw.githubusercontent.com/aheckmann/koa-router/19e60d9/package.json"
        }
      },
      "D:\\Git\\ticketserver\\node_modules\\koa-joi-router"
    ]
  ],
  "_from": "git+https://github.com/aheckmann/koa-router.git#19e60d9",
  "_id": "koa-router@7.0.1",
  "_inCache": true,
  "_location": "/koa-joi-router/koa-router",
  "_phantomChildren": {},
  "_requested": {
    "raw": "koa-router@git+https://github.com/aheckmann/koa-router.git#19e60d9",
    "scope": null,
    "escapedName": "koa-router",
    "name": "koa-router",
    "rawSpec": "git+https://github.com/aheckmann/koa-router.git#19e60d9",
    "spec": "git+https://github.com/aheckmann/koa-router.git#19e60d9",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:aheckmann/koa-router.git#19e60d9",
      "sshUrl": "git+ssh://git@github.com/aheckmann/koa-router.git#19e60d9",
      "httpsUrl": "git+https://github.com/aheckmann/koa-router.git#19e60d9",
      "gitUrl": "git://github.com/aheckmann/koa-router.git#19e60d9",
      "shortcut": "github:aheckmann/koa-router#19e60d9",
      "directUrl": "https://raw.githubusercontent.com/aheckmann/koa-router/19e60d9/package.json"
    }
  },
  "_requiredBy": [
    "/koa-joi-router"
  ],
  "_resolved": "git+https://github.com/aheckmann/koa-router.git#19e60d915a948c93a728ecbd90b92060b1206f24",
  "_shasum": "362c460e9fa73d2ce572b0884a2a14a2d834695b",
  "_shrinkwrap": null,
  "_spec": "koa-router@git+https://github.com/aheckmann/koa-router.git#19e60d9",
  "_where": "D:\\Git\\ticketserver\\node_modules\\koa-joi-router",
  "author": {
    "name": "Alex Mingoia",
    "email": "talk@alexmingoia.com"
  },
  "bugs": {
    "url": "https://github.com/alexmingoia/koa-router/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "http-errors": "^1.3.1",
    "koa-compose": "^3.0.0",
    "methods": "^1.0.1",
    "path-to-regexp": "^1.1.1"
  },
  "description": "Router middleware for koa. Provides RESTful resource routing.",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "gulp": "^3.8.11",
    "gulp-mocha": "^2.0.0",
    "jsdoc-to-markdown": "^1.1.1",
    "koa": "^2.0.0-alpha.3",
    "mocha": "^2.0.1",
    "should": "^6.0.3",
    "supertest": "^1.0.1"
  },
  "engines": {
    "node": ">= 4"
  },
  "files": [
    "lib"
  ],
  "gitHead": "19e60d915a948c93a728ecbd90b92060b1206f24",
  "homepage": "https://github.com/alexmingoia/koa-router#readme",
  "keywords": [
    "koa",
    "middleware",
    "router",
    "route"
  ],
  "license": "MIT",
  "main": "lib/router.js",
  "name": "koa-router",
  "optionalDependencies": {},
  "readme": "# koa-router\r\n\r\n[![NPM version](https://img.shields.io/badge/npm-v7.0.1-blue.svg?style=flat)](https://npmjs.org/package/koa-router) [![NPM Downloads](https://img.shields.io/npm/dm/koa-router.svg?style=flat)](https://npmjs.org/package/koa-router) [![Node.js Version](https://img.shields.io/node/v/koa-router.svg?style=flat)](http://nodejs.org/download/) [![Build Status](http://img.shields.io/travis/alexmingoia/koa-router.svg?style=flat)](http://travis-ci.org/alexmingoia/koa-router) [![Tips](https://img.shields.io/gratipay/alexmingoia.svg?style=flat)](https://www.gratipay.com/alexmingoia/) [![Gitter Chat](https://img.shields.io/badge/gitter-join%20chat-1dce73.svg?style=flat)](https://gitter.im/alexmingoia/koa-router/)\r\n\r\n> Router middleware for [koa](https://github.com/koajs/koa)\r\n\r\n* Express-style routing using `app.get`, `app.put`, `app.post`, etc.\r\n* Named URL parameters.\r\n* Named routes with URL generation.\r\n* Responds to `OPTIONS` requests with allowed methods.\r\n* Support for `405 Method Not Allowed` and `501 Not Implemented`.\r\n* Multiple route middleware.\r\n* Multiple routers.\r\n* Nestable routers.\r\n* ES7 async/await support.\r\n\r\n## Migrating to 7 / Koa 2\r\n\r\n- The API has changed to match the new promise-based middleware\r\n  signature of koa 2. See the\r\n  [koa 2.x readme](https://github.com/koajs/koa/tree/2.0.0-alpha.3) for more\r\n  information.\r\n- Middleware is now always run in the order declared by `.use()` (or `.get()`,\r\n  etc.), which matches Express 4 API.\r\n\r\n## Installation\r\n\r\nUntil koa 2 is released, you must specify `^7.0.0` or use the `next` tag:\r\n\r\n```sh\r\nnpm install koa-router@next\r\n```\r\n\r\nWhen koa 2 is released, 7.x will be tagged with `latest` and installed by\r\ndefault by NPM.\r\n\r\n## API Reference\r\n\r\n* [koa-router](#module_koa-router)\r\n  * [Router](#exp_module_koa-router--Router) ⏏\r\n    * [new Router([opts])](#new_module_koa-router--Router_new)\r\n    * _instance_\r\n      * [.get|put|post|patch|delete](#module_koa-router--Router+get|put|post|patch|delete) ⇒ <code>Router</code>\r\n      * [.routes](#module_koa-router--Router+routes) ⇒ <code>function</code>\r\n      * [.use([path], middleware, [...])](#module_koa-router--Router+use) ⇒ <code>Router</code>\r\n      * [.prefix(prefix)](#module_koa-router--Router+prefix) ⇒ <code>Router</code>\r\n      * [.allowedMethods([options])](#module_koa-router--Router+allowedMethods) ⇒ <code>function</code>\r\n      * [.redirect(source, destination, code)](#module_koa-router--Router+redirect) ⇒ <code>Router</code>\r\n      * [.route(name)](#module_koa-router--Router+route) ⇒ <code>Layer</code> &#124; <code>false</code>\r\n      * [.url(name, params)](#module_koa-router--Router+url) ⇒ <code>String</code> &#124; <code>Error</code>\r\n      * [.param(param, middleware)](#module_koa-router--Router+param) ⇒ <code>Router</code>\r\n    * _static_\r\n      * [.url(path, params)](#module_koa-router--Router.url) ⇒ <code>String</code>\r\n\r\n<a name=\"exp_module_koa-router--Router\"></a>\r\n### Router ⏏\r\n**Kind**: Exported class\r\n<a name=\"new_module_koa-router--Router_new\"></a>\r\n#### new Router([opts])\r\nCreate a new router.\r\n\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| [opts] | <code>Object</code> |  |\r\n| [opts.prefix] | <code>String</code> | prefix router paths |\r\n\r\n**Example**\r\nBasic usage:\r\n\r\n```javascript\r\nvar app = require('koa')();\r\nvar router = require('koa-router')();\r\n\r\nrouter.get('/', function (ctx, next) {...});\r\n\r\napp\r\n  .use(router.routes())\r\n  .use(router.allowedMethods());\r\n```\r\n<a name=\"module_koa-router--Router+get|put|post|patch|delete\"></a>\r\n#### router.get|put|post|patch|delete ⇒ <code>Router</code>\r\nCreate `router.verb()` methods, where *verb* is one of the HTTP verbs such\r\nas `router.get()` or `router.post()`.\r\n\r\nMatch URL patterns to callback functions or controller actions using `router.verb()`,\r\nwhere **verb** is one of the HTTP verbs such as `router.get()` or `router.post()`.\r\n\r\n```javascript\r\nrouter\r\n  .get('/', function (ctx, next) {\r\n    ctx.body = 'Hello World!';\r\n  })\r\n  .post('/users', function (ctx, next) {\r\n    // ...\r\n  })\r\n  .put('/users/:id', function (ctx, next) {\r\n    // ...\r\n  })\r\n  .del('/users/:id', function (ctx, next) {\r\n    // ...\r\n  });\r\n```\r\n\r\nRoute paths will be translated to regular expressions used to match requests.\r\n\r\nQuery strings will not be considered when matching requests.\r\n\r\n#### Named routes\r\n\r\nRoutes can optionally have names. This allows generation of URLs and easy\r\nrenaming of URLs during development.\r\n\r\n```javascript\r\nrouter.get('user', '/users/:id', function (ctx, next) {\r\n // ...\r\n});\r\n\r\nrouter.url('user', 3);\r\n// => \"/users/3\"\r\n```\r\n\r\n#### Multiple middleware\r\n\r\nMultiple middleware may be given:\r\n\r\n```javascript\r\nrouter.get(\r\n  '/users/:id',\r\n  function (ctx, next) {\r\n    return User.findOne(ctx.params.id).then(function(user) {\r\n      ctx.user = user;\r\n      return next();\r\n    });\r\n  },\r\n  function (ctx) {\r\n    console.log(ctx.user);\r\n    // => { id: 17, name: \"Alex\" }\r\n  }\r\n);\r\n```\r\n\r\n### Nested routers\r\n\r\nNesting routers is supported:\r\n\r\n```javascript\r\nvar forums = new Router();\r\nvar posts = new Router();\r\n\r\nposts.get('/', function (ctx, next) {...});\r\nposts.get('/:pid', function (ctx, next) {...});\r\nforums.use('/forums/:fid/posts', posts.routes(), posts.allowedMethods());\r\n\r\n// responds to \"/forums/123/posts\" and \"/forums/123/posts/123\"\r\napp.use(forums.routes());\r\n```\r\n\r\n#### Router prefixes\r\n\r\nRoute paths can be prefixed at the router level:\r\n\r\n```javascript\r\nvar router = new Router({\r\n  prefix: '/users'\r\n});\r\n\r\nrouter.get('/', ...); // responds to \"/users\"\r\nrouter.get('/:id', ...); // responds to \"/users/:id\"\r\n```\r\n\r\n#### URL parameters\r\n\r\nNamed route parameters are captured and added to `ctx.params`.\r\n\r\n```javascript\r\nrouter.get('/:category/:title', function (ctx, next) {\r\n  console.log(ctx.params);\r\n  // => { category: 'programming', title: 'how-to-node' }\r\n});\r\n```\r\n\r\nThe [path-to-regexp](https://github.com/pillarjs/path-to-regexp) module is used\r\nto convert paths to regular expressions.\r\n\r\n**Kind**: instance property of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| path | <code>String</code> |  |\r\n| [middleware] | <code>function</code> | route middleware(s) |\r\n| callback | <code>function</code> | route callback |\r\n\r\n<a name=\"module_koa-router--Router+routes\"></a>\r\n#### router.routes ⇒ <code>function</code>\r\nReturns router middleware which dispatches a route matching the request.\r\n\r\n**Kind**: instance property of <code>[Router](#exp_module_koa-router--Router)</code>\r\n<a name=\"module_koa-router--Router+use\"></a>\r\n#### router.use([path], middleware, [...]) ⇒ <code>Router</code>\r\nUse given middleware.\r\n\r\nMiddleware run in the order they are defined by `.use()`. They are invoked\r\nsequentially, requests start at the first middleware and work their way\r\n\"down\" the middleware stack.\r\n\r\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| [path] | <code>String</code> |\r\n| middleware | <code>function</code> |\r\n| [...] | <code>function</code> |\r\n\r\n**Example**\r\n```javascript\r\n// session middleware will run before authorize\r\nrouter\r\n  .use(session())\r\n  .use(authorize());\r\n\r\n// use middleware only with given path\r\nrouter.use('/users', userAuth());\r\n\r\n// or with an array of paths\r\nrouter.use(['/users', '/admin'], userAuth());\r\n\r\napp.use(router.routes());\r\n```\r\n<a name=\"module_koa-router--Router+prefix\"></a>\r\n#### router.prefix(prefix) ⇒ <code>Router</code>\r\nSet the path prefix for a Router instance that was already initialized.\r\n\r\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| prefix | <code>String</code> |\r\n\r\n**Example**\r\n```javascript\r\nrouter.prefix('/things/:thing_id')\r\n```\r\n<a name=\"module_koa-router--Router+allowedMethods\"></a>\r\n#### router.allowedMethods([options]) ⇒ <code>function</code>\r\nReturns separate middleware for responding to `OPTIONS` requests with\r\nan `Allow` header containing the allowed methods, as well as responding\r\nwith `405 Method Not Allowed` and `501 Not Implemented` as appropriate.\r\n\r\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| [options] | <code>Object</code> |  |\r\n| [options.throw] | <code>Boolean</code> | throw error instead of setting status and header |\r\n| [options.notImplemented] | <code>Function</code> | throw throw the returned value in place of the default NotImplemented error |\r\n| [options.methodNotAllowed] | <code>Function</code> | throw the returned value in place of the default MethodNotAllowed error |\r\n\r\n**Example**\r\n```javascript\r\nvar app = koa();\r\nvar router = router();\r\n\r\napp.use(router.routes());\r\napp.use(router.allowedMethods());\r\n\r\n```\r\n**Example with [Boom](https://github.com/hapijs/boom)**\r\n```javascript\r\nvar app = koa();\r\nvar router = router();\r\nvar Boom = require('boom');\r\n\r\napp.use(router.routes());\r\napp.use(router.allowedMethods({\r\n  throw: true,\r\n  notImplemented: () => new Boom.notImplemented(),\r\n  methodNotAllowed: () => new Boom.methodNotAllowed()\r\n}));\r\n```\r\n<a name=\"module_koa-router--Router+redirect\"></a>\r\n#### router.redirect(source, destination, code) ⇒ <code>Router</code>\r\nRedirect `source` to `destination` URL with optional 30x status `code`.\r\n\r\nBoth `source` and `destination` can be route names.\r\n\r\n```javascript\r\nrouter.redirect('/login', 'sign-in');\r\n```\r\n\r\nThis is equivalent to:\r\n\r\n```javascript\r\nrouter.all('/login', function (ctx) {\r\n  ctx.redirect('/sign-in');\r\n  ctx.status = 301;\r\n});\r\n```\r\n\r\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| source | <code>String</code> | URL or route name. |\r\n| destination | <code>String</code> | URL or route name. |\r\n| code | <code>Number</code> | HTTP status code (default: 301). |\r\n\r\n<a name=\"module_koa-router--Router+route\"></a>\r\n#### router.route(name) ⇒ <code>Layer</code> &#124; <code>false</code>\r\nLookup route with given `name`.\r\n\r\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| name | <code>String</code> |\r\n\r\n<a name=\"module_koa-router--Router+url\"></a>\r\n#### router.url(name, params) ⇒ <code>String</code> &#124; <code>Error</code>\r\nGenerate URL for route. Takes either map of named `params` or series of\r\narguments (for regular expression routes).\r\n\r\n```javascript\r\nrouter.get('user', '/users/:id', function (ctx, next) {\r\n // ...\r\n});\r\n\r\nrouter.url('user', 3);\r\n// => \"/users/3\"\r\n\r\nrouter.url('user', { id: 3 });\r\n// => \"/users/3\"\r\n```\r\n\r\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| name | <code>String</code> | route name |\r\n| params | <code>Object</code> | url parameters |\r\n\r\n<a name=\"module_koa-router--Router+param\"></a>\r\n#### router.param(param, middleware) ⇒ <code>Router</code>\r\nRun middleware for named route parameters. Useful for auto-loading or\r\nvalidation.\r\n\r\n**Kind**: instance method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type |\r\n| --- | --- |\r\n| param | <code>String</code> |\r\n| middleware | <code>function</code> |\r\n\r\n**Example**\r\n```javascript\r\nrouter\r\n  .param('user', function (id, ctx, next) {\r\n    ctx.user = users[id];\r\n    if (!ctx.user) return ctx.status = 404;\r\n    return next();\r\n  })\r\n  .get('/users/:user', function (ctx) {\r\n    ctx.body = ctx.user;\r\n  })\r\n  .get('/users/:user/friends', function (ctx) {\r\n    return ctx.user.getFriends().then(function(friends) {\r\n      ctx.body = friends;\r\n    });\r\n  })\r\n  // /users/3 => {\"id\": 3, \"name\": \"Alex\"}\r\n  // /users/3/friends => [{\"id\": 4, \"name\": \"TJ\"}]\r\n```\r\n<a name=\"module_koa-router--Router.url\"></a>\r\n#### Router.url(path, params) ⇒ <code>String</code>\r\nGenerate URL from url pattern and given `params`.\r\n\r\n**Kind**: static method of <code>[Router](#exp_module_koa-router--Router)</code>\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| path | <code>String</code> | url pattern |\r\n| params | <code>Object</code> | url parameters |\r\n\r\n**Example**\r\n```javascript\r\nvar url = Router.url('/users/:id', {id: 1});\r\n// => \"/users/1\"\r\n```\r\n## Contributing\r\n\r\nPlease submit all issues and pull requests to the [alexmingoia/koa-router](http://github.com/alexmingoia/koa-router) repository!\r\n\r\n## Tests\r\n\r\nRun tests using `npm test`.\r\n\r\n## Support\r\n\r\nIf you have any problem or suggestion please open an issue [here](https://github.com/alexmingoia/koa-router/issues).\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/alexmingoia/koa-router.git"
  },
  "scripts": {
    "docs": "NODE_ENV=test node node_modules/gulp/bin/gulp.js docs",
    "test": "NODE_ENV=test node node_modules/gulp/bin/gulp.js test"
  },
  "version": "7.0.1"
}
